---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Dashboard" description="Manage your Javamate Coffee account and orders">
  <div id="auth-loading" class="min-h-screen bg-primary-50 flex items-center justify-center">
    <div class="text-center">
      <div class="coffee-loader mb-4"></div>
      <p class="text-primary-600">Loading your dashboard...</p>
    </div>
  </div>

  <div id="dashboard-content" class="hidden">
    <section class="bg-primary-900 text-white py-16 md:py-24">
      <div class="container-custom">
        <div class="max-w-3xl mx-auto text-center">
          <h1 class="mb-4 animate-fade-in">Welcome back!</h1>
          <p class="text-lg text-primary-100 animate-slide-up" style="animation-delay: 0.2s;">
            Manage your account, view your orders, and discover new coffees.
          </p>
        </div>
      </div>
    </section>

    <section class="section bg-white">
      <div class="container-custom">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- User Info -->
          <div class="lg:col-span-1">
            <div class="card p-6 sticky top-24">
              <div class="text-center mb-6">
                <div class="w-20 h-20 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-primary-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                </div>
                <h3 class="text-xl font-semibold mb-2" id="user-email">Loading...</h3>
                <p class="text-primary-600">Coffee Enthusiast</p>
              </div>

              <!-- Subscription Status -->
              <div id="subscription-status" class="mb-6">
                <h4 class="font-semibold mb-3">Subscription Status</h4>
                <div id="subscription-info" class="p-4 bg-primary-50 rounded-lg">
                  <p class="text-sm text-primary-600">Loading subscription information...</p>
                </div>
              </div>

              <!-- Quick Actions -->
              <div class="space-y-3">
                <a href="/shop" class="btn-primary w-full text-center">Browse Coffee</a>
                <a href="/cart" class="btn-outline w-full text-center">View Cart</a>
                <button id="logout-button" class="btn-outline w-full text-error-600 border-error-600 hover:bg-error-50">
                  Sign Out
                </button>
              </div>
            </div>
          </div>

          <!-- Main Content -->
          <div class="lg:col-span-2 space-y-8">
            <!-- Available Products -->
            <div class="card p-6">
              <h3 class="text-2xl font-semibold mb-6">Available Products</h3>
              <div id="products-list" class="space-y-4">
                <div class="text-center py-8">
                  <div class="coffee-loader mb-4"></div>
                  <p class="text-primary-600">Loading products...</p>
                </div>
              </div>
            </div>

            <!-- Recent Orders -->
            <div class="card p-6">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-2xl font-semibold">Recent Orders</h3>
                <a href="/orders" class="text-primary-600 hover:text-primary-800 text-sm font-medium">View All</a>
              </div>
              <div id="orders-list">
                <div class="text-center py-8">
                  <div class="coffee-loader mb-4"></div>
                  <p class="text-primary-600">Loading orders...</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </div>

  <!-- Loading Modal -->
  <div id="loading-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-8 max-w-sm w-full mx-4">
      <div class="text-center">
        <div class="coffee-loader mb-4"></div>
        <h3 class="text-lg font-semibold mb-2">Processing...</h3>
        <p class="text-primary-600" id="loading-message">Please wait while we process your request.</p>
      </div>
    </div>
  </div>
</Layout>

<script type="module">
  import { supabase } from '../lib/supabaseClient.js';
  import { stripeProducts } from '../stripe-config';

  document.addEventListener('DOMContentLoaded', async () => {
    const authLoading = document.getElementById('auth-loading');
    const dashboardContent = document.getElementById('dashboard-content');
    const userEmailElement = document.getElementById('user-email');
    const subscriptionInfo = document.getElementById('subscription-info');
    const productsList = document.getElementById('products-list');
    const ordersList = document.getElementById('orders-list');
    const logoutButton = document.getElementById('logout-button');
    const loadingModal = document.getElementById('loading-modal');
    const loadingMessage = document.getElementById('loading-message');

    function showLoading(message = 'Processing...') {
      loadingMessage.textContent = message;
      loadingModal.classList.remove('hidden');
    }

    function hideLoading() {
      loadingModal.classList.add('hidden');
    }

    // Check authentication
    const { data: { user }, error: authError } = await supabase.auth.getUser();

    if (authError || !user) {
      window.location.href = '/login';
      return;
    }

    // Show dashboard
    authLoading.classList.add('hidden');
    dashboardContent.classList.remove('hidden');

    // Display user info
    userEmailElement.textContent = user.email || 'User';

    // Load subscription status
    await loadSubscriptionStatus();

    // Load products
    loadProducts();

    // Load orders
    await loadOrders();

    // Logout handler
    logoutButton.addEventListener('click', async () => {
      showLoading('Signing out...');
      await supabase.auth.signOut();
      window.location.href = '/';
    });

    async function loadSubscriptionStatus() {
      try {
        const { data, error } = await supabase
          .from('stripe_user_subscriptions')
          .select('*')
          .maybeSingle();

        if (error) {
          console.error('Error loading subscription:', error);
          subscriptionInfo.innerHTML = `
            <div class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-warning-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
              </svg>
              <span class="text-sm text-warning-700">Unable to load subscription status</span>
            </div>
          `;
          return;
        }

        if (!data || !data.subscription_status || data.subscription_status === 'not_started') {
          subscriptionInfo.innerHTML = `
            <div class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span class="text-sm text-primary-700">No active subscription</span>
            </div>
          `;
        } else {
          const statusColor = data.subscription_status === 'active' ? 'success' : 
                             data.subscription_status === 'past_due' ? 'warning' : 'primary';
          
          subscriptionInfo.innerHTML = `
            <div class="flex items-center justify-between">
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-${statusColor}-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <span class="text-sm text-${statusColor}-700 capitalize">${data.subscription_status.replace('_', ' ')}</span>
              </div>
            </div>
            ${data.current_period_end ? `
              <p class="text-xs text-primary-600 mt-1">
                Next billing: ${new Date(data.current_period_end * 1000).toLocaleDateString()}
              </p>
            ` : ''}
          `;
        }
      } catch (error) {
        console.error('Error loading subscription status:', error);
        subscriptionInfo.innerHTML = `
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-error-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span class="text-sm text-error-700">Error loading subscription</span>
          </div>
        `;
      }
    }

    function loadProducts() {
      productsList.innerHTML = stripeProducts.map(product => `
        <div class="border border-primary-200 rounded-lg p-6">
          <div class="flex justify-between items-start mb-4">
            <div>
              <h4 class="text-lg font-semibold mb-2">${product.name}</h4>
              <p class="text-primary-700 text-sm">${product.description}</p>
            </div>
            <span class="text-lg font-bold text-primary-900">$20.00</span>
          </div>
          <div class="flex justify-between items-center">
            <span class="text-xs px-2 py-1 bg-primary-100 text-primary-700 rounded-full capitalize">
              ${product.mode === 'payment' ? 'One-time Purchase' : 'Subscription'}
            </span>
            <button 
              class="btn-primary py-2 px-4 text-sm purchase-btn" 
              data-price-id="${product.priceId}"
              data-mode="${product.mode}"
              data-name="${product.name}"
            >
              ${product.mode === 'payment' ? 'Buy Now' : 'Subscribe'}
            </button>
          </div>
        </div>
      `).join('');

      // Add purchase handlers
      document.querySelectorAll('.purchase-btn').forEach(button => {
        button.addEventListener('click', async (e) => {
          const priceId = e.target.dataset.priceId;
          const mode = e.target.dataset.mode;
          const name = e.target.dataset.name;
          
          await handlePurchase(priceId, mode, name);
        });
      });
    }

    async function loadOrders() {
      try {
        const { data, error } = await supabase
          .from('stripe_user_orders')
          .select('*')
          .order('order_date', { ascending: false })
          .limit(5);

        if (error) {
          console.error('Error loading orders:', error);
          ordersList.innerHTML = `
            <div class="text-center py-8">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-error-400 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <p class="text-error-600">Unable to load orders</p>
            </div>
          `;
          return;
        }

        if (!data || data.length === 0) {
          ordersList.innerHTML = `
            <div class="text-center py-8">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-primary-400 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
              </svg>
              <p class="text-primary-600">No orders yet</p>
              <p class="text-sm text-primary-500 mt-1">Your purchase history will appear here</p>
            </div>
          `;
        } else {
          ordersList.innerHTML = `
            <div class="space-y-4">
              ${data.map(order => `
                <div class="border border-primary-200 rounded-lg p-4">
                  <div class="flex justify-between items-start">
                    <div>
                      <a href="/order/${order.order_id}" class="font-medium text-primary-800 hover:text-primary-600">
                        Order #${order.order_id}
                      </a>
                      <p class="text-sm text-primary-600">${new Date(order.order_date).toLocaleDateString()}</p>
                    </div>
                    <div class="text-right">
                      <p class="font-semibold">$${(order.amount_total / 100).toFixed(2)}</p>
                      <span class="text-xs px-2 py-1 bg-success-100 text-success-700 rounded-full capitalize">
                        ${order.order_status}
                      </span>
                    </div>
                  </div>
                </div>
              `).join('')}
            </div>
          `;
        }
      } catch (error) {
        console.error('Error loading orders:', error);
        ordersList.innerHTML = `
          <div class="text-center py-8">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-error-400 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p class="text-error-600">Error loading orders</p>
          </div>
        `;
      }
    }

    async function handlePurchase(priceId, mode, productName) {
      showLoading(`Preparing ${mode === 'payment' ? 'purchase' : 'subscription'} for ${productName}...`);

      try {
        const { data: { session }, error: sessionError } = await supabase.auth.getSession();
        
        if (sessionError || !session) {
          throw new Error('Authentication required');
        }

        const response = await fetch(`${import.meta.env.PUBLIC_SUPABASE_URL}/functions/v1/stripe-checkout`, {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${session.access_token}`,
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            price_id: priceId,
            mode: mode,
            success_url: `${window.location.origin}/success?session_id={CHECKOUT_SESSION_ID}`,
            cancel_url: `${window.location.origin}/dashboard`,
          }),
        });

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.error || 'Failed to create checkout session');
        }

        if (data.url) {
          window.location.href = data.url;
        } else {
          throw new Error('No checkout URL received');
        }
      } catch (error) {
        console.error('Purchase error:', error);
        hideLoading();
        
        // Show error message
        const errorDiv = document.createElement('div');
        errorDiv.className = 'fixed top-24 right-8 bg-error-500 text-white py-3 px-6 rounded-lg shadow-lg z-50 animate-fade-in';
        errorDiv.innerHTML = `
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            ${error.message || 'Purchase failed. Please try again.'}
          </div>
        `;
        document.body.appendChild(errorDiv);
        
        setTimeout(() => {
          errorDiv.remove();
        }, 5000);
      }
    }
  });
</script>