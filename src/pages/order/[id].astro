---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Order Details" description="View your order details and status">
  <div id="auth-loading" class="min-h-screen bg-primary-50 flex items-center justify-center">
    <div class="text-center">
      <div class="coffee-loader mb-4"></div>
      <p class="text-primary-600">Loading order details...</p>
    </div>
  </div>

  <div id="order-content" class="hidden">
    <section class="bg-primary-900 text-white py-16 md:py-24">
      <div class="container-custom">
        <div class="max-w-3xl mx-auto text-center">
          <h1 class="mb-4 animate-fade-in">Order Details</h1>
          <p class="text-lg text-primary-100 animate-slide-up" style="animation-delay: 0.2s;">
            Review your order information and status.
          </p>
        </div>
      </div>
    </section>

    <section class="section bg-white">
      <div class="container-custom">
        <div class="max-w-4xl mx-auto">
          <!-- Back to Orders -->
          <div class="mb-8">
            <a href="/orders" class="inline-flex items-center text-primary-600 hover:text-primary-800 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
              </svg>
              Back to Orders
            </a>
          </div>

          <!-- Order Header -->
          <div id="order-header" class="card p-6 mb-8">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between">
              <div>
                <h2 class="text-2xl font-semibold mb-2" id="order-title">Loading...</h2>
                <p class="text-primary-600" id="order-date">Loading...</p>
              </div>
              <div class="mt-4 md:mt-0">
                <span id="order-status" class="px-3 py-1 rounded-full text-sm font-medium">Loading...</span>
              </div>
            </div>
          </div>

          <!-- Order Summary -->
          <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Order Items -->
            <div class="lg:col-span-2">
              <div class="card p-6">
                <h3 class="text-xl font-semibold mb-6">Order Items</h3>
                <div id="order-items" class="space-y-4">
                  <div class="text-center py-8">
                    <div class="coffee-loader mb-4"></div>
                    <p class="text-primary-600">Loading items...</p>
                  </div>
                </div>
              </div>
            </div>

            <!-- Order Summary -->
            <div class="lg:col-span-1">
              <div class="card p-6">
                <h3 class="text-xl font-semibold mb-6">Order Summary</h3>
                <div id="order-summary" class="space-y-4">
                  <div class="flex justify-between">
                    <span>Subtotal</span>
                    <span id="order-subtotal">Loading...</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Tax</span>
                    <span id="order-tax">Loading...</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Shipping</span>
                    <span id="order-shipping">Loading...</span>
                  </div>
                  <hr class="border-primary-200">
                  <div class="flex justify-between text-lg font-semibold">
                    <span>Total</span>
                    <span id="order-total">Loading...</span>
                  </div>
                </div>

                <!-- Payment Information -->
                <div class="mt-8 pt-6 border-t border-primary-200">
                  <h4 class="font-semibold mb-4">Payment Information</h4>
                  <div id="payment-info" class="space-y-2 text-sm">
                    <div class="flex justify-between">
                      <span class="text-primary-600">Payment Method:</span>
                      <span id="payment-method">Loading...</span>
                    </div>
                    <div class="flex justify-between">
                      <span class="text-primary-600">Payment Status:</span>
                      <span id="payment-status">Loading...</span>
                    </div>
                    <div class="flex justify-between">
                      <span class="text-primary-600">Transaction ID:</span>
                      <span id="transaction-id" class="font-mono text-xs">Loading...</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </div>

  <!-- Error State -->
  <div id="error-content" class="hidden">
    <section class="min-h-screen bg-primary-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
      <div class="max-w-2xl w-full">
        <div class="bg-white rounded-lg shadow-medium p-8 text-center">
          <div class="w-20 h-20 bg-error-100 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-error-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h1 class="text-3xl font-bold text-primary-900 mb-4">Order Not Found</h1>
          <p class="text-lg text-primary-700 mb-8">
            We couldn't find the order you're looking for. It may have been removed or you may not have permission to view it.
          </p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <a href="/orders" class="btn-primary">View All Orders</a>
            <a href="/dashboard" class="btn-outline">Go to Dashboard</a>
          </div>
        </div>
      </div>
    </section>
  </div>
</Layout>

<script type="module">
  import { supabase } from '../../lib/supabaseClient.js';

  document.addEventListener('DOMContentLoaded', async () => {
    const authLoading = document.getElementById('auth-loading');
    const orderContent = document.getElementById('order-content');
    const errorContent = document.getElementById('error-content');

    // Get order ID from URL
    const pathParts = window.location.pathname.split('/');
    const orderId = pathParts[pathParts.length - 1];

    if (!orderId || orderId === 'order') {
      showError();
      return;
    }

    try {
      // Check authentication
      const { data: { user }, error: authError } = await supabase.auth.getUser();

      if (authError || !user) {
        window.location.href = '/login';
        return;
      }

      // Load order details
      await loadOrderDetails(orderId);
      
    } catch (error) {
      console.error('Error loading order details:', error);
      showError();
    }

    function showError() {
      authLoading.classList.add('hidden');
      errorContent.classList.remove('hidden');
    }

    function showOrder() {
      authLoading.classList.add('hidden');
      orderContent.classList.remove('hidden');
    }

    async function loadOrderDetails(orderId) {
      try {
        // Load order from database
        const { data: order, error } = await supabase
          .from('stripe_user_orders')
          .select('*')
          .eq('order_id', orderId)
          .single();

        if (error) {
          console.error('Error fetching order:', error);
          showError();
          return;
        }

        if (!order) {
          showError();
          return;
        }

        // Display order details
        displayOrderDetails(order);
        showOrder();
        
      } catch (error) {
        console.error('Error loading order details:', error);
        showError();
      }
    }

    function displayOrderDetails(order) {
      // Order header
      document.getElementById('order-title').textContent = `Order #${order.order_id}`;
      document.getElementById('order-date').textContent = `Placed on ${new Date(order.order_date).toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      })}`;

      // Order status
      const statusElement = document.getElementById('order-status');
      const statusClass = getStatusClass(order.order_status);
      statusElement.textContent = order.order_status.charAt(0).toUpperCase() + order.order_status.slice(1);
      statusElement.className = `px-3 py-1 rounded-full text-sm font-medium ${statusClass}`;

      // Order items (simplified - in a real app you'd have line items)
      const orderItemsContainer = document.getElementById('order-items');
      orderItemsContainer.innerHTML = `
        <div class="border border-primary-200 rounded-lg p-4">
          <div class="flex justify-between items-start">
            <div>
              <h4 class="font-medium">Organic Peru SWP Decaf</h4>
              <p class="text-sm text-primary-600">12oz bag, Whole Bean</p>
              <p class="text-sm text-primary-600">Quantity: 1</p>
            </div>
            <div class="text-right">
              <p class="font-semibold">$${(order.amount_total / 100).toFixed(2)}</p>
            </div>
          </div>
        </div>
      `;

      // Order summary
      const subtotal = order.amount_subtotal / 100;
      const total = order.amount_total / 100;
      const tax = 0; // Assuming no tax for now
      const shipping = total - subtotal - tax;

      document.getElementById('order-subtotal').textContent = `$${subtotal.toFixed(2)}`;
      document.getElementById('order-tax').textContent = `$${tax.toFixed(2)}`;
      document.getElementById('order-shipping').textContent = shipping > 0 ? `$${shipping.toFixed(2)}` : 'FREE';
      document.getElementById('order-total').textContent = `$${total.toFixed(2)}`;

      // Payment information
      document.getElementById('payment-method').textContent = 'Credit Card';
      document.getElementById('payment-status').textContent = order.payment_status.charAt(0).toUpperCase() + order.payment_status.slice(1);
      document.getElementById('transaction-id').textContent = order.payment_intent_id || 'N/A';
    }

    function getStatusClass(status) {
      switch (status) {
        case 'completed':
          return 'bg-success-100 text-success-700';
        case 'pending':
          return 'bg-warning-100 text-warning-700';
        case 'canceled':
          return 'bg-error-100 text-error-700';
        default:
          return 'bg-primary-100 text-primary-700';
      }
    }
  });
</script>