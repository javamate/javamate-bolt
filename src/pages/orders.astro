---
import Layout from '../layouts/Layout.astro';
---

<Layout title="My Orders" description="View your order history and track your purchases">
  <div id="auth-loading" class="min-h-screen bg-primary-50 flex items-center justify-center">
    <div class="text-center">
      <div class="coffee-loader mb-4"></div>
      <p class="text-primary-600">Loading your orders...</p>
    </div>
  </div>

  <div id="orders-content" class="hidden">
    <section class="bg-primary-900 text-white py-16 md:py-24">
      <div class="container-custom">
        <div class="max-w-3xl mx-auto text-center">
          <h1 class="mb-4 animate-fade-in">My Orders</h1>
          <p class="text-lg text-primary-100 animate-slide-up" style="animation-delay: 0.2s;">
            Track your purchases and view order details.
          </p>
        </div>
      </div>
    </section>

    <section class="section bg-white">
      <div class="container-custom">
        <div class="max-w-4xl mx-auto">
          <!-- Back to Dashboard -->
          <div class="mb-8">
            <a href="/dashboard" class="inline-flex items-center text-primary-600 hover:text-primary-800 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
              </svg>
              Back to Dashboard
            </a>
          </div>

          <!-- Orders List -->
          <div id="orders-list" class="space-y-6">
            <div class="text-center py-8">
              <div class="coffee-loader mb-4"></div>
              <p class="text-primary-600">Loading orders...</p>
            </div>
          </div>

          <!-- Empty State -->
          <div id="empty-orders" class="hidden text-center py-16">
            <div class="w-24 h-24 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-6">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
              </svg>
            </div>
            <h3 class="text-2xl font-semibold mb-4">No orders yet</h3>
            <p class="text-primary-600 mb-8">You haven't placed any orders yet. Start shopping to see your order history here.</p>
            <a href="/shop" class="btn-primary">Start Shopping</a>
          </div>

          <!-- Error State -->
          <div id="error-orders" class="hidden text-center py-16">
            <div class="w-24 h-24 bg-error-100 rounded-full flex items-center justify-center mx-auto mb-6">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-error-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h3 class="text-2xl font-semibold mb-4">Unable to load orders</h3>
            <p class="text-primary-600 mb-8">We're having trouble loading your orders. Please try again later.</p>
            <button id="retry-btn" class="btn-primary">Try Again</button>
          </div>
        </div>
      </div>
    </section>
  </div>
</Layout>

<script type="module">
  import { supabase } from '../lib/supabaseClient.js';

  document.addEventListener('DOMContentLoaded', async () => {
    const authLoading = document.getElementById('auth-loading');
    const ordersContent = document.getElementById('orders-content');
    const ordersList = document.getElementById('orders-list');
    const emptyOrders = document.getElementById('empty-orders');
    const errorOrders = document.getElementById('error-orders');
    const retryBtn = document.getElementById('retry-btn');

    // Check authentication
    const { data: { user }, error: authError } = await supabase.auth.getUser();

    if (authError || !user) {
      window.location.href = '/login';
      return;
    }

    // Show orders content
    authLoading.classList.add('hidden');
    ordersContent.classList.remove('hidden');

    // Load orders
    await loadOrders();

    // Retry button handler
    retryBtn.addEventListener('click', async () => {
      showLoading();
      await loadOrders();
    });

    function showLoading() {
      ordersList.innerHTML = `
        <div class="text-center py-8">
          <div class="coffee-loader mb-4"></div>
          <p class="text-primary-600">Loading orders...</p>
        </div>
      `;
      ordersList.classList.remove('hidden');
      emptyOrders.classList.add('hidden');
      errorOrders.classList.add('hidden');
    }

    function showEmpty() {
      ordersList.classList.add('hidden');
      emptyOrders.classList.remove('hidden');
      errorOrders.classList.add('hidden');
    }

    function showError() {
      ordersList.classList.add('hidden');
      emptyOrders.classList.add('hidden');
      errorOrders.classList.remove('hidden');
    }

    function showOrders() {
      ordersList.classList.remove('hidden');
      emptyOrders.classList.add('hidden');
      errorOrders.classList.add('hidden');
    }

    async function loadOrders() {
      try {
        const { data: orders, error } = await supabase
          .from('stripe_user_orders')
          .select('*')
          .order('order_date', { ascending: false });

        if (error) {
          console.error('Error loading orders:', error);
          showError();
          return;
        }

        if (!orders || orders.length === 0) {
          showEmpty();
          return;
        }

        // Display orders
        ordersList.innerHTML = orders.map(order => `
          <div class="card p-6">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between">
              <div class="mb-4 md:mb-0">
                <div class="flex items-center space-x-4 mb-2">
                  <a href="/order/${order.order_id}" class="text-xl font-semibold text-primary-800 hover:text-primary-600 transition-colors">
                    Order #${order.order_id}
                  </a>
                  <span class="px-3 py-1 rounded-full text-sm font-medium ${getStatusClass(order.order_status)}">
                    ${order.order_status.charAt(0).toUpperCase() + order.order_status.slice(1)}
                  </span>
                </div>
                <p class="text-primary-600 mb-1">
                  Placed on ${new Date(order.order_date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                  })}
                </p>
                <p class="text-sm text-primary-500">
                  Payment Status: ${order.payment_status.charAt(0).toUpperCase() + order.payment_status.slice(1)}
                </p>
              </div>
              
              <div class="flex flex-col md:items-end">
                <p class="text-2xl font-bold text-primary-900 mb-2">
                  $${(order.amount_total / 100).toFixed(2)}
                </p>
                <div class="flex space-x-2">
                  <a href="/order/${order.order_id}" class="btn-outline py-2 px-4 text-sm">
                    View Details
                  </a>
                  ${order.order_status === 'completed' ? `
                    <button class="btn-primary py-2 px-4 text-sm reorder-btn" data-order-id="${order.order_id}">
                      Reorder
                    </button>
                  ` : ''}
                </div>
              </div>
            </div>
            
            <!-- Order Summary -->
            <div class="mt-6 pt-6 border-t border-primary-200">
              <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                <div>
                  <span class="text-primary-600">Subtotal:</span>
                  <span class="font-medium ml-2">$${(order.amount_subtotal / 100).toFixed(2)}</span>
                </div>
                <div>
                  <span class="text-primary-600">Currency:</span>
                  <span class="font-medium ml-2 uppercase">${order.currency}</span>
                </div>
                <div>
                  <span class="text-primary-600">Transaction ID:</span>
                  <span class="font-mono text-xs ml-2">${order.payment_intent_id || 'N/A'}</span>
                </div>
              </div>
            </div>
          </div>
        `).join('');

        // Add reorder handlers
        document.querySelectorAll('.reorder-btn').forEach(button => {
          button.addEventListener('click', async (e) => {
            const orderId = e.target.dataset.orderId;
            await handleReorder(orderId);
          });
        });

        showOrders();
        
      } catch (error) {
        console.error('Error loading orders:', error);
        showError();
      }
    }

    function getStatusClass(status) {
      switch (status) {
        case 'completed':
          return 'bg-success-100 text-success-700';
        case 'pending':
          return 'bg-warning-100 text-warning-700';
        case 'canceled':
          return 'bg-error-100 text-error-700';
        default:
          return 'bg-primary-100 text-primary-700';
      }
    }

    async function handleReorder(orderId) {
      try {
        // For demo purposes, we'll just redirect to shop
        // In a real app, you'd fetch the order items and add them to cart
        const message = document.createElement('div');
        message.innerHTML = `
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            Reorder feature coming soon! Redirecting to shop...
          </div>
        `;
        message.className = 'fixed top-24 right-8 bg-primary-500 text-white py-3 px-6 rounded-lg shadow-lg z-50 animate-fade-in';
        document.body.appendChild(message);
        
        setTimeout(() => {
          message.remove();
          window.location.href = '/shop';
        }, 2000);
        
      } catch (error) {
        console.error('Reorder error:', error);
        
        const errorDiv = document.createElement('div');
        errorDiv.className = 'fixed top-24 right-8 bg-error-500 text-white py-3 px-6 rounded-lg shadow-lg z-50 animate-fade-in';
        errorDiv.innerHTML = `
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            Failed to reorder. Please try again.
          </div>
        `;
        document.body.appendChild(errorDiv);
        
        setTimeout(() => {
          errorDiv.remove();
        }, 5000);
      }
    }
  });
</script>